@model CMCS.Models.ClaimViewModel
@{
    ViewData["Title"] = "Claim Details";
}

<div class="card shadow-sm">
    <div class="card-body">
        <h2 class="card-title">Claim Details</h2>

        <dl class="row">
            <dt class="col-sm-3">Claim ID</dt>
            <dd class="col-sm-9">@Model.ClaimID</dd>

            <dt class="col-sm-3">Month</dt>
            <dd class="col-sm-9">@Model.Month</dd>

            <dt class="col-sm-3">Year</dt>
            <dd class="col-sm-9">@Model.Year</dd>

            <dt class="col-sm-3">Total Amount</dt>
            <dd class="col-sm-9">@Model.TotalAmount.ToString("C")</dd>

            <dt class="col-sm-3">Status</dt>
            <dd class="col-sm-9">@Model.Status</dd>
        </dl>

        <h5>Claim Lines</h5>
        @if (Model.Lines.Any())
        {
            <ul class="list-group mb-3">
                @foreach (var line in Model.Lines)
                {
                    <li class="list-group-item">
                        <strong>@line.Description</strong> — @line.Hours hrs × @line.Rate.ToString("C") = @line.LineTotal.ToString("C")
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="text-muted">No claim lines added.</p>
        }

        <div class="mt-3">
        <h4>Supporting Documents</h4>
        @if (Model.Documents != null && Model.Documents.Any())
        {
            <ul class="list-group mb-3">
                @foreach (var d in Model.Documents)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div>
                            @d.FileName
                        </div>
                        <div>
                            @{
                                var ext = System.IO.Path.GetExtension(d.FileName)?.ToLowerInvariant();
                            }
                            @if (ext == ".pdf")
                            {
                                <button type="button" class="btn btn-sm btn-outline-info me-1" onclick="openPreview(@Model.ClaimId, '@d.FilePath', '@d.FileName')">Preview</button>
                            }
                            <a class="btn btn-sm btn-outline-primary" asp-controller="Documents" asp-action="Download" asp-route-claimId="@Model.ClaimId" asp-route-file="@d.FilePath">Download</a>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="text-muted">No supporting documents.</p>
        }

            <a class="btn btn-outline-primary" asp-controller="Documents" asp-action="Upload" asp-route-id="@Model.ClaimId">
                Upload Supporting Documents
            </a>
        </div>
    </div>
</div>


<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="previewModalLabel">Document Preview</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <iframe id="previewFrame" src="" width="100%" height="600px" style="border:0"></iframe>
      </div>
    </div>
  </div>
</div>

<script>
    function openPreview(claimId, filePath, fileName) {
        var url = '@Url.Action("Download", "Documents")' + '?claimId=' + claimId + '&file=' + encodeURIComponent(filePath);
        var frame = document.getElementById('previewFrame');
        frame.src = url;
        var label = document.getElementById('previewModalLabel');
        label.textContent = 'Preview - ' + fileName;
        var myModal = new bootstrap.Modal(document.getElementById('previewModal'));
        myModal.show();
    }
</script>

